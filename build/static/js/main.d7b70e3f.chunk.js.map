{"version":3,"sources":["api/Firebase.js","actions/authAction.js","containers/navbar/navbar.js","actions/postAction.js","components/posts/ListPost/ListPost.js","components/loader.js","containers/posts/AllPosts.js","components/Alert/Alert.js","components/posts/PostForm/postForm.js","containers/posts/newPost.js","components/posts/PostView/PostView.js","components/posts/Comments/Comment.js","containers/posts/ShowPost/ShowPost.js","containers/posts/editPost.js","components/form/forms.js","containers/users/register.js","containers/users/login.js","components/requireAuth.js","App.js","reducers/postsReducer.js","reducers/postReducer.js","reducers/authReducer.js","reducers/index.js","index.js","common/configureStore.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","CREATE_USER_SUCCESS","LOGIN_USER_SUCCESS","LOGOUT_USER_SUCCESS","GET_PROFILE_SUCCESS","UPDATE_PROFILE_SUCCESS","logout","callback","dispatch","type","auth","signOut","then","res","payload","catch","error","Navbar","this","props","history","push","isAuthenticated","className","user","onClick","onLogout","exact","activeClassName","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","renderNavbar","Component","withRouter","connect","state","FETCH_POSTS_SUCCESS","FETCH_POST_REQUEST","FETCH_POST_SUCCESS","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAIL","LOAD_MORE_SUCCESS","ADD_COMMENT_SUCCESS","fetchPost","ref","child","on","snapshot","post","postId","val","Promise","all","uid","once","snaps","comments","displayName","message","deletePost","remove","ListPost","title","content","moment","Date","createdAt","format","Loader","role","AllPosts","fetchPosts","posts","isFetched","length","bordered","dataSource","renderItem","item","index","list","tpye","toast","configure","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Alert","msg","toastId","PostForm","onSubmit","values","formRef","useRef","useEffect","current","setFieldsValue","onFinish","Item","name","label","rules","required","placeholder","autoComplete","Math","random","TextArea","NewPost","createPost","formType","key","ServerValue","TIMESTAMP","update","PostView","Comment","comment","deleteComment","postid","commentid","editComment","ShowPost","edit","commentId","React","createRef","match","params","setState","addComment","commentObj","onSubmitComment","htmlType","Object","keys","map","k","setStateEdit","renderButtons","renderCommentForm","renderComments","data","databaseRef","set","EditPost","replace","editPost","goBack","onDeletePost","initialValues","emailRule","validator","_","value","test","resolve","reject","emailValidator","SignUp","register","email","password","username","Password","dependencies","getFieldValue","rule","callback1","callback2","createUserWithEmailAndPassword","profile","usesr","currentUser","updateProfile","userCreated","login","signInWithEmailAndPassword","REDIRECT_IF_GUEST","REDIRECT_IF_AUTHENTICATED","RequireAuth","component","redirectCheck","authProps","rest","render","localStorage","getItem","toString","pathname","from","location","App","path","Register","Login","initialState","rootReducer","combineReducers","action","undefined","window","setItem","assign","orderBy","drop","concat","store","createStore","reducers","applyMiddleware","promise","thunk","onAuthStateChanged","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d7b70e3f.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyD6NiATiGy5Qme0ZBgJK1GttkbZJSBrk68\",\n  authDomain: \"blog23-167417.firebaseapp.com\",\n  databaseURL: \"https://blog23-167417.firebaseio.com\",\n  projectId: \"blog23-167417\",\n  storageBucket: \"blog23-167417.appspot.com\",\n  messagingSenderId: \"897040135213\",\n  appId: \"1:897040135213:web:7e18164bb6a722a1d434a4\",\n  measurementId: \"G-KQ7JK87CF9\",\n};\n\nfirebase.initializeApp(config);\n\nconst database = firebase.database();\n\nexport default database;\n","import firebase from 'firebase';\nimport database from '../api/Firebase';\nexport const CREATE_USER_REQUEST \t= 'create_user_request';\nexport const CREATE_USER_SUCCESS \t= 'create_user_success';\nexport const CREATE_USER_FAIL \t\t= 'create_user_fail';\nexport const LOGIN_USER_REQUEST \t= 'login_user_request';\nexport const LOGIN_USER_SUCCESS \t= 'login_user_success';\nexport const LOGIN_USER_FAIL \t\t= 'login_user_fail';\nexport const LOGOUT_USER_REQUEST \t= 'logout_user_request';\nexport const LOGOUT_USER_SUCCESS \t= 'logout_user_success';\nexport const LOGOUT_USER_FAIL \t\t= 'logout_user_fail';\nexport const GET_PROFILE_REQUEST \t= 'get_profile_request';\nexport const GET_PROFILE_SUCCESS \t= 'get_profile_success';\nexport const GET_PROFILE_FAIL \t\t= 'get_profile_fail';\nexport const UPDATE_PROFILE_REQUEST = 'update_profile_request';\nexport const UPDATE_PROFILE_SUCCESS = 'update_profile_success';\nexport const UPDATE_PROFILE_FAIL \t= 'update_profile_FAIL';\n\n\n\nexport function register(email, password, username, callback1, callback2) {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: CREATE_USER_REQUEST\n\t\t})\n\t\tfirebase.auth().createUserWithEmailAndPassword(email, password)\n\t\t\t.then((res) => {\n\t\t\t\tdispatch(userCreated(res, password,username, callback1));\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tcallback2(error.message);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: CREATE_USER_FAIL,\n\t\t\t\t\tpayload: error\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n\n\nexport function userCreated(user,password, profile, callback) {\n\tconst usesr = firebase.auth().currentUser;\n    return dispatch => {\n    \tdispatch({\n\t\t\ttype: CREATE_USER_SUCCESS,\n\t\t\tpayload: user\n\t\t});\n\t\t\n    \tusesr.updateProfile(profile).then(() => {\n    \t\tdispatch({\n    \t\t\ttype: UPDATE_PROFILE_SUCCESS,\n    \t\t\tpayload: profile\n    \t\t});\n    \t\tcallback();\n\t\t});\n    \tfirebase.database().ref('users/'+user.user.uid).set({\n    \t\tdisplayName: profile.displayName,\n\t\t\temail: user.user.email,\n\t\t\tpassword:password\n    \t})\n\t}\n}\n\n\n\nexport function login(email, password, callback1, callback2) {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: LOGIN_USER_REQUEST\n\t\t})\n\t\tfirebase.auth().signInWithEmailAndPassword(email, password)\n\t\t\t.then((res) => {\n\t\t\t\tcallback1();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: LOGIN_USER_SUCCESS,\n\t\t\t\t\tpayload: res\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tcallback2(error.message);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: LOGIN_USER_FAIL,\n\t\t\t\t\tpayload: error\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n\nexport function logout(callback) {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: LOGOUT_USER_REQUEST\n\t\t})\n\t\tfirebase.auth().signOut()\n\t\t\t.then(res => {\n\t\t\t\tcallback();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: LOGOUT_USER_SUCCESS,\n\t\t\t\t\tpayload: res\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: LOGOUT_USER_FAIL,\n\t\t\t\t\tpayload: error\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n\n\nexport function verifyAuth() {\n\treturn dispatch => {\n\t\tfirebase.auth().onAuthStateChanged(user => {\n\t\t\tif (user) \n\t\t\t\tdispatch({\n\t\t\t\t\ttype: LOGIN_USER_SUCCESS,\n\t\t\t\t\tpayload: user\n\t\t\t\t});\n\t\t\telse \n\t\t\t\tdispatch(logout());\n\t\t});\n\t}\n}\n\nexport function getProfile() {\n\t\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE_REQUEST\n\t\t})\n\t\tconst user = firebase.auth().currentUser;\n\t\tif (user) {\n\t\t\tdispatch({\n\t\t\t\ttype: GET_PROFILE_SUCCESS,\n\t\t\t\tpayload: user\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tdispatch({\n\t\t\t\ttype: GET_PROFILE_FAIL\n\t\t\t})\n\t\t}\n\t}\n}\n\nexport function updateProfile(profile, callback) {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE_REQUEST\n\t\t})\n\t\tconst user = firebase.auth().currentUser;\n\t\tuser.updateProfile(profile)\n\t\t.then(() => {\n\t\t\tupdateUsernameOfComments(user.uid, profile);\n\t\t\tdatabase.ref('users/'+user.uid).update(profile);\n\t\t\tcallback();\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_PROFILE_SUCCESS,\n\t\t\t\tpayload: profile\n\t\t\t})\n\t\t}, () => {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_PROFILE_FAIL\n\t\t\t})\n\t\t});\n\t}\n}\n\n\nfunction updateUsernameOfComments(uid, profile) {\n    database.ref('userComments/' + uid).once('value').then(snapshot => {\n\t\tif(snapshot.val()!==null){\n\t\tconst userComments = snapshot.val();\n        Object.keys(snapshot.val()).forEach(postId => {\n            Object.keys(userComments[postId]).forEach(commentId => {\n                database.ref(`comments/${postId}/${commentId}`).update({\n                \tuser: profile.displayName\n                })\n            });\n\t\t});\n\t}\n    });\n}\n","import React, { Component, Fragment } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/authAction\";\nimport \"./navbar.scss\";\n\nclass Navbar extends Component {\n  onLogout() {\n    const { logout, history } = this.props;\n\n    logout(() => {\n      history.push(\"/\");\n    });\n  }\n\n  renderNavbar() {\n    const { auth } = this.props;\n\n    if (auth.isAuthenticated) {\n      return (\n        <Fragment>\n          <li className=\"nav-item\">\n            <span className=\"nav-link\">\n              <i className=\"fa fa-user-circle\"></i>\n              {auth.user}\n            </span>\n          </li>\n          <li className=\"nav-item\">\n            <button\n              className=\"nav-link logout-btn\"\n              onClick={() => this.onLogout()}\n            >\n              <i className=\"fa fa-sign-out\"></i>logout\n            </button>\n          </li>\n        </Fragment>\n      );\n    } else\n      return (\n        <Fragment>\n          <li className=\"nav-item\">\n            <NavLink\n              exact={true}\n              activeClassName=\"active\"\n              to=\"/users/login\"\n              className=\"nav-link\"\n            >\n              <i className=\"fa fa-sign-in\"></i>login\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink\n              exact={true}\n              activeClassName=\"active\"\n              to=\"/users/register\"\n              className=\"nav-link\"\n            >\n              <i className=\"fa fa-user-plus\"></i>register\n            </NavLink>\n          </li>\n        </Fragment>\n      );\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg \">\n        <NavLink to=\"/posts\" className=\"navbar-brand\">\n          blog\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink\n                exact={true}\n                activeClassName=\"active\"\n                to=\"/posts\"\n                className=\"nav-link\"\n              >\n                <i className=\"fa fa-home\"></i>all posts\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                exact={true}\n                activeClassName=\"active\"\n                to=\"/posts/create\"\n                className=\"nav-link\"\n              >\n                <i className=\"fa fa-plus-circle\"></i>new post\n              </NavLink>\n            </li>\n            {this.renderNavbar()}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, { logout })(Navbar));\n","import database from \"../api/Firebase\";\nimport firebase from \"firebase\";\n\nexport const FETCH_POSTS_REQUEST = \"fetch_posts_request\";\nexport const FETCH_POSTS_SUCCESS = \"fetch_posts_success\";\nexport const FETCH_POSTS_FAIL = \"fetch_posts_fail\";\nexport const CREATE_POST = \"create_post\";\nexport const FETCH_POST_REQUEST = \"fetch_post_request\";\nexport const FETCH_POST_SUCCESS = \"fetch_post_success\";\nexport const FETCH_POST_FAIL = \"fetch_post_fail\";\nexport const DELETE_POST_REQUEST = \"delete_post_request\";\nexport const DELETE_POST_SUCCESS = \"delete_post_success\";\nexport const DELETE_POST_FAIL = \"delete_post_fail\";\nexport const LOAD_MORE_SUCCESS = \"load_more_success\";\nexport const ADD_COMMENT_SUCCESS = \"add_comment_success\";\n\nexport function fetchPosts() {\n  return (dispatch) => {\n    dispatch({\n      type: FETCH_POSTS_REQUEST,\n    });\n    database.ref(\"posts\").once(\n      \"value\",\n      (snapshot) => {\n        dispatch({\n          type: FETCH_POSTS_SUCCESS,\n          payload: snapshot.val(),\n        });\n      },\n      (error) => {\n        dispatch({\n          tpye: FETCH_POSTS_FAIL,\n          payload: error.message,\n        });\n      }\n    );\n  };\n}\n\nexport function fetchPost(id) {\n  return (dispatch) => {\n    dispatch({\n      type: FETCH_POST_REQUEST,\n    });\n    database\n      .ref(\"posts\")\n      .child(id)\n      .on(\n        \"value\",\n        (snapshot) => {\n          if (snapshot.val() != null)\n            dispatch(getPostCreatorAndComments(snapshot.val(), id));\n        },\n        (error) => {\n          dispatch({\n            type: FETCH_POST_FAIL,\n            payload: error.message,\n          });\n        }\n      );\n  };\n}\n\nexport function getPostCreatorAndComments(post, postId) {\n  return (dispatch) => {\n    Promise.all([\n      database.ref(\"users/\" + post.uid).once(\"value\"),\n      database.ref(\"comments/\" + postId).once(\"value\"),\n    ]).then((snaps) => {\n      const user = snaps[0].val();\n      const comments = snaps[1].val();\n      dispatch({\n        type: FETCH_POST_SUCCESS,\n        post: post,\n        id: postId,\n        user: user ? user.displayName : post.user,\n        comments: comments,\n      });\n    });\n  };\n}\n\nexport function createPost(post, callback) {\n  let val = post;\n  const key = database.ref(\"posts\").push().key;\n  val[\"createdAt\"] = firebase.database.ServerValue.TIMESTAMP;\n  val[\"id\"] = key;\n  return (dispatch) =>\n    database\n      .ref(\"posts/\" + key)\n      .update(val)\n      .then(() => callback());\n}\n\nexport function deletePost(id, callback) {\n  return (dispatch) => {\n    dispatch({\n      type: DELETE_POST_REQUEST,\n    });\n    database\n      .ref(\"posts\")\n      .child(id)\n      .remove(() => {})\n      .then(() => {\n        typeof callback === \"function\" && callback();\n        dispatch({\n          type: DELETE_POST_SUCCESS,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: DELETE_POST_FAIL,\n          payload: error.message,\n        });\n      });\n  };\n}\n\nexport function deleteComment(id, comment, commentid, callback) {\n  return (dispatch) => {\n    dispatch({\n      type: DELETE_POST_REQUEST,\n    });\n    database\n      .ref(\"comments/\" + id)\n      .child(commentid)\n      .remove(() => {})\n      .then(() => {\n        typeof callback === \"function\" && callback();\n        dispatch({\n          type: DELETE_POST_SUCCESS,\n        });\n\n        database\n          .ref(\"userComments/\" + comment.uid + \"/\" + id)\n          .child(commentid)\n          .remove();\n      })\n      .catch((error) => {\n        dispatch({\n          type: DELETE_POST_FAIL,\n          payload: error.message,\n        });\n      });\n  };\n}\n\nexport function editPost(id, post) {\n  return () => database.ref(\"posts/\" + id).update(post);\n}\n\nexport function addComment(comment, postId) {\n  let data = comment;\n  const databaseRef = database.ref(\"comments/\" + postId);\n  const commentId = databaseRef.push().key;\n  data[\"createdAt\"] = firebase.database.ServerValue.TIMESTAMP;\n\n  return (dispatch) => {\n    databaseRef\n      .child(commentId)\n      .set(data)\n      .then(() => {\n        dispatch({\n          type: ADD_COMMENT_SUCCESS,\n          payload: comment,\n          id: commentId,\n        });\n      });\n    database.ref(\"userComments/\" + comment.uid + \"/\" + postId).update({\n      [commentId]: true,\n    });\n  };\n}\n\nexport function editComment(postId, comment, commentId) {\n  return (dispatch) => {\n    database\n      .ref(`comments/${postId}/` + commentId)\n      .update(comment)\n      .then(() => {\n        dispatch(fetchPost(postId));\n      });\n  };\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport \"./ListPost.scss\";\n\nconst ListPost = (props) => {\n  const { post } = props;\n\n  return (\n    <div className=\"row\">\n      <div className=\"br-posts \">\n        <div className=\"d-flex w-100 justify-content-between\">\n          <Link className=\"br-posts__post-title\" to={`/posts/${post.id}`}>\n            {post.title}\n          </Link>\n        </div>\n        <div className=\"br-posts__post-content\">\n          <p>{post.content}</p>\n        </div>\n        <div className=\"br-posts__post-info\">\n          <i className=\"fa fa-calendar\"></i>\n          {moment(new Date(post?.createdAt)).format(\"MMM Do YY\")}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListPost;\n","import React from \"react\";\n\nconst Loader = (props) => {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPosts, deletePost } from \"../../actions/postAction\";\nimport ListPost from \"../../components/posts/ListPost/ListPost\";\nimport Loader from \"../../components/loader\";\nimport { List } from \"antd\";\n\nclass AllPosts extends Component {\n  componentDidMount() {\n    const { fetchPosts } = this.props;\n\n    fetchPosts();\n  }\n\n  render() {\n    const { posts, isFetched } = this.props;\n\n    if (!isFetched) return <Loader />;\n\n    if (!posts.length && isFetched)\n      return (\n        <div className=\"post-index d-flex justify-content-center\">\n          There are no questions yet.\n        </div>\n      );\n\n    return (\n      <div className=\"post-index\">\n        <div className=\"posts\">\n          <List\n            bordered\n            dataSource={posts}\n            renderItem={(item, index) => <ListPost key={index} post={item} />}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts.list,\n    isFetched: state.posts.isFetched,\n  };\n}\n\nexport default connect(mapStateToProps, { fetchPosts, deletePost })(AllPosts);\n","import { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./Alert.scss\";\n\nconst toastConfigObject = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: false,\n  draggable: true,\n};\n\ntoast.configure(toastConfigObject);\n\nexport const Alert = (msg, type = \"error\", id = 1) =>\n  toast(msg, { className: type, toastId: id });\n","import React, { useEffect, useRef } from \"react\";\nimport { Form, Input } from \"antd\";\n\nconst PostForm = (props) => {\n  const { onSubmit, values } = props;\n  const formRef = useRef(\"\");\n\n  useEffect(() => {\n    if (values) {\n      formRef.current.setFieldsValue({\n        title: values.title,\n        content: values.content,\n      });\n    }\n  }, [values]);\n\n  return (\n    <Form onFinish={onSubmit} ref={formRef}>\n      <Form.Item\n        name=\"title\"\n        label={\"post title \"}\n        rules={[\n          {\n            required: true,\n            message: <p className=\"br-error\"> this field is required </p>,\n          },\n        ]}\n      >\n        <Input placeholder=\"your title \" autoComplete={\"\" + Math.random()} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"content\"\n        label={\"post content \"}\n        rules={[\n          {\n            required: true,\n            message: <p className=\"br-error\"> this field is required </p>,\n          },\n        ]}\n      >\n        <Input.TextArea\n          placeholder=\"your description \"\n          autoComplete={\"\" + Math.random()}\n        />\n      </Form.Item>\n      <div className=\"bottom-button\">\n        <button type=\"submit\" className=\"btn btn-primary\">\n          save\n        </button>\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createPost } from \"../../actions/postAction\";\nimport { Alert } from \"../../components/Alert/Alert\";\nimport PostForm from \"../../components/posts/PostForm/postForm\";\n\nclass NewPost extends Component {\n  onSubmit(values) {\n    const post = {\n      ...values,\n      uid: this.props.auth.uid,\n      user: this.props.auth.user,\n    };\n    if (this.props.auth.uid !== null) {\n      this.props.createPost(post, () => {\n        Alert(\"The post has been created \", \"success\");\n\n        this.props.history.push(\"/\");\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"post-form\">\n        <PostForm\n          onSubmit={(values) => this.onSubmit(values)}\n          formType=\"create\"\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createPost: (post, callback) => {\n    dispatch(createPost(post, callback));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost);\n","import React from \"react\";\nimport moment from \"moment\";\nimport \"./PostView.scss\";\n\nconst PostView = (props) => {\n  const { post } = props;\n\n  return (\n    <div className=\"br-post-detail text-center\">\n      <h2 className=\"br-post-title\">{post.title}</h2>\n      <div className=\"br-post-creation-time\">\n        <i className=\"fa fa-calendar\"></i>\n        {moment(new Date(post?.createdAt)).format(\"MMM Do YY\")}\n      </div>\n      <div className=\"br-post-creator\">\n        <i className=\"fa fa-user-o\"></i>\n        {post.user}\n      </div>\n      <p className=\"br-post-content\">{post.content}</p>\n    </div>\n  );\n};\n\nexport default PostView;\n","import React from \"react\";\nimport moment from \"moment\";\nimport \"./Comments.scss\";\n\nconst Comment = (props) => {\n  const { comment, deleteComment, postid, commentid, auth, editComment } =\n    props;\n  return (\n    <div className=\"br-comment\">\n      <div className=\"br-comment__comment-user\">\n        {comment.user}\n\n        <span>{moment(comment?.createdAt).format(\"MMM Do YY\")}</span>\n      </div>\n      <p className=\"br-comment__comment-body\">{comment.message}</p>\n      {comment.uid === auth.uid && (\n        <div className=\"top-buttons text-right\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => deleteComment(postid, comment, commentid)}\n          >\n            <i className=\"fa fa-remove\"></i>delete\n          </button>\n          <button className=\"btn btn-primary\" onClick={() => editComment()}>\n            edit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Comment;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  fetchPost,\n  addComment,\n  deleteComment,\n  editComment,\n} from \"../../../actions/postAction\";\nimport PostView from \"../../../components/posts/PostView/PostView\";\nimport Comment from \"../../../components/posts/Comments/Comment\";\nimport Loader from \"../../../components/loader\";\nimport { Form, Input, Button } from \"antd\";\nimport \"./ShowPost.scss\";\n\nclass ShowPost extends Component {\n  state = {\n    edit: false,\n    comment: null,\n    commentId: null,\n  };\n\n  componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      fetchPost,\n    } = this.props;\n\n    fetchPost(id);\n  }\n  formRef = React.createRef();\n\n  setStateEdit(edit, postid, comment, commentId) {\n    this.setState({ edit, commentId, comment });\n    this.formRef.current.setFieldsValue({ comment: comment.message });\n  }\n\n  onSubmitComment(values) {\n    const {\n      auth,\n      match: {\n        params: { id },\n      },\n      addComment,\n      editComment,\n    } = this.props;\n\n    const { edit, commentId, comment } = this.state;\n\n    const commentObj = {\n      user: auth.user,\n      uid: auth.uid,\n      message: values.comment,\n    };\n\n    if (!edit) {\n      addComment(commentObj, id);\n    } else {\n      editComment(id, { ...comment, message: values.comment }, commentId);\n      this.setState({ edit: false, comment: null, commentId: null });\n      this.formRef.current.setFieldsValue({ comment: null });\n    }\n  }\n\n  renderCommentForm() {\n    const { auth } = this.props;\n\n    if (auth.isAuthenticated) {\n      return (\n        <Form\n          onFinish={(values) => this.onSubmitComment(values)}\n          ref={this.formRef}\n        >\n          <Form.Item\n            name=\"comment\"\n            label={\"Comment\"}\n            rules={[\n              {\n                required: true,\n                message: <p className=\"br-error\"> this field is required </p>,\n              },\n            ]}\n          >\n            <Input.TextArea\n              placeholder=\"leave your comments \"\n              autoComplete={\"\" + Math.random()}\n            />\n          </Form.Item>\n\n          <div className=\"bottom-button\">\n            <Button htmlType=\"submit\" className=\"btn btn-primary\">\n              save\n            </Button>\n          </div>\n        </Form>\n      );\n    } else\n      return (\n        <div>\n          <b>comments</b>\n          <div>\n            <p>please login to leave your comments </p>\n          </div>\n        </div>\n      );\n  }\n\n  deleteComment(postid, comment, commentid) {\n    const { deleteComment, fetchPost } = this.props;\n\n    deleteComment(postid, comment, commentid, () => {\n      fetchPost(postid);\n    });\n  }\n\n  renderComments() {\n    const { comments, id } = this.props.post;\n    const { auth } = this.props;\n    return (\n      comments &&\n      Object.keys(comments)\n        .map((k) => [comments[k], k])\n        .map((item, key) => {\n          return (\n            <Comment\n              comment={item[0]}\n              auth={auth}\n              commentid={key}\n              key={key}\n              postid={id}\n              editComment={() => this.setStateEdit(true, id, item[0], item[1])}\n              deleteComment={() => this.deleteComment(id, item[0], item[1])}\n            />\n          );\n        })\n    );\n  }\n\n  renderButtons(post) {\n    const { auth } = this.props;\n\n    if (auth.uid === post.uid)\n      return (\n        <div className=\"form-buttons text-right\">\n          <Link to={`/posts/edit/${post.id}`} className=\"btn btn-primary\">\n            <i className=\"fa fa-edit\"></i>edit post\n          </Link>\n        </div>\n      );\n  }\n\n  render() {\n    const { post } = this.props;\n\n    if (!post.isFetched) return <Loader />;\n\n    return (\n      <div className=\"br-post-view\">\n        <div className=\"br-post-view__post-view-post\">\n          {this.renderButtons(post)}\n          <PostView post={post} />\n        </div>\n        <div className=\"br-post-view__post-view-comment\">\n          {this.renderCommentForm()}\n\n          <div className=\"br-post-view__comments\">{this.renderComments()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.post,\n    auth: state.auth,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchPost: (id) => dispatch(fetchPost(id)),\n    deleteComment: (postid, comment, commentid, history) =>\n      dispatch(deleteComment(postid, comment, commentid, history)),\n    addComment: (comment, postId) => dispatch(addComment(comment, postId)),\n    editComment: (id, comment, commentId) =>\n      dispatch(editComment(id, comment, commentId)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowPost);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchPost, deletePost, editPost } from \"../../actions/postAction\";\nimport { Alert } from \"../../components/Alert/Alert\";\nimport PostForm from \"../../components/posts/PostForm/postForm\";\nimport Loader from \"../../components/loader\";\n\nclass EditPost extends Component {\n  componentWillMount() {\n    const { id } = this.props.match.params;\n    this.props.fetchPost(id);\n  }\n\n  onDeletePost(id) {\n    const { deletePost, history } = this.props;\n\n    deletePost(id, () => {\n      Alert(\"The post has been successfully deleted\", \"success\");\n      history.replace(\"/\");\n    });\n  }\n\n  onSubmit(values) {\n    const { id } = this.props.post;\n    const { history, editPost, post } = this.props;\n    editPost(id, { ...post, ...values });\n    Alert(\"The post has been successfully saved\", \"success\");\n    history.goBack();\n  }\n\n  renderButtons(post) {\n    const { auth } = this.props;\n\n    if (auth.uid === post.uid)\n      return (\n        <div className=\"top-buttons text-right\">\n          <Link to={`/posts/${post.id}`} className=\"btn btn-primary\">\n            <i className=\"fa fa-ban\"></i> cancel\n          </Link>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => this.onDeletePost(post.id)}\n          >\n            <i className=\"fa fa-remove\"></i> delete\n          </button>\n        </div>\n      );\n  }\n\n  render() {\n    const { post } = this.props;\n\n    if (!post.isFetched) return <Loader />;\n\n    return (\n      <div className=\"post-form\">\n        {this.renderButtons(post)}\n        <PostForm\n          values={post}\n          onSubmit={(values) => this.onSubmit(values)}\n          formType=\"edit\"\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.post,\n    auth: state.auth,\n    initialValues: state.post,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchPost: (id) => dispatch(fetchPost(id)),\n    deletePost: (id, callback) => dispatch(deletePost(id, callback)),\n    editPost: (id, post) => dispatch(editPost(id, post)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);\n","const emailValidator = (value, message) => {\n  const emailExp = /^\\S+@\\S+\\.\\S+$/;\n\n  if (!value || emailExp.test(value)) {\n    return Promise.resolve();\n  }\n  return Promise.reject(message);\n};\n\nexport const emailRule = (message) => ({\n  validator: (_, value) => emailValidator(value, message),\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/authAction\";\nimport { Form, Input, Button } from \"antd\";\nimport { emailRule } from \"../../components/form/forms\";\n\nimport { Alert } from \"../../components/Alert/Alert\";\n\nclass SignUp extends Component {\n  onSubmit(values) {\n    const { register, history } = this.props;\n\n    register(\n      values.email,\n      values.password,\n      { displayName: values.username },\n      () => {\n        history.goBack();\n        Alert(\"You have register in successfully.\", \"success\");\n      },\n      (error) => {\n        Alert(error);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"user-form\">\n        <Form name=\"register-form\" onFinish={(values) => this.onSubmit(values)}>\n          <Form.Item\n            name=\"username\"\n            label={\"username\"}\n            rules={[\n              {\n                required: true,\n                message: <p className=\"br-error\"> this field is required </p>,\n              },\n            ]}\n          >\n            <Input autoComplete={\"\" + Math.random()} />\n          </Form.Item>\n          <Form.Item\n            name=\"email\"\n            label={\"Email\"}\n            rules={[\n              {\n                required: true,\n                message: <p className=\"br-error\"> this field is required </p>,\n              },\n              emailRule(\"this wrong email \"),\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[\n              {\n                required: true,\n                message: <p className=\"br-error\"> this field is required </p>,\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            name=\"confirmPassword\"\n            label={\"confirm password\"}\n            dependencies={[\"password\"]}\n            rules={[\n              { required: true },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\"password not match\");\n                },\n              }),\n            ]}\n          >\n            <Input.Password className=\"br-signup__password\" />\n          </Form.Item>\n          <Button\n            type=\"secondary\"\n            className=\"createButton full-width\"\n            htmlType=\"submit\"\n          >\n            register\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  };\n}\n\nexport default connect(mapStateToProps, { register })(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/authAction\";\nimport { Alert } from \"../../components/Alert/Alert\";\nimport { Form, Input, Button } from \"antd\";\nimport { emailRule } from \"../../components/form/forms\";\n\nclass SignUp extends Component {\n  onSubmit(values) {\n    const { login } = this.props;\n\n    login(\n      values.email,\n      values.password,\n      () => {\n        this.props.history.push(\"/\");\n        Alert(\"You have signed in successfully.\", \"success\");\n      },\n      (error) => {\n        Alert(error);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"user-form\">\n        <Form\n          name=\"login-form\"\n          className=\"login-form\"\n          onFinish={(values) => this.onSubmit(values)}\n        >\n          <Form.Item\n            name=\"email\"\n            label={\"Email\"}\n            rules={[\n              {\n                required: true,\n                message: <p className=\"br-error\"> this field is required </p>,\n              },\n              emailRule(\"this wrong email \"),\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[\n              {\n                required: true,\n                message: <p className=\"br-error\"> this field is required </p>,\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Button\n            type=\"secondary\"\n            className=\"createButton full-width\"\n            htmlType=\"submit\"\n            // onClick={() => handleOnClickSignUp()}\n          >\n            login\n          </Button>\n        </Form>\n        {/* {errorMessage && <div className=\"error-message\">{errorMessage}</div>} */}\n        {/* {renderUserForm(\"login\", that, this.onSubmit, btn)} */}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  };\n}\n\nexport default connect(mapStateToProps, { login })(SignUp);\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const REDIRECT_IF_GUEST = \"redirect_if_guest\";\nexport const REDIRECT_IF_AUTHENTICATED = \"redirect_if_authenticated\";\n\nconst RequireAuth = ({\n  component: Component,\n  redirectCheck,\n  authProps,\n  ...rest\n}) => {\n  if (redirectCheck === REDIRECT_IF_AUTHENTICATED) {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          localStorage.getItem(\"isAuthenticated\") === \"false\" ||\n          localStorage.getItem(\"isAuthenticated\") !==\n            authProps.auth.isAuthenticated.toString() ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: props.location },\n              }}\n            />\n          )\n        }\n      />\n    );\n  } else if (\n    redirectCheck === REDIRECT_IF_GUEST &&\n    localStorage.getItem(\"isAuthenticated\") === \"true\"\n  ) {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          localStorage.getItem(\"isAuthenticated\") === \"true\" &&\n          localStorage.getItem(\"isAuthenticated\") ===\n            authProps.auth.isAuthenticated.toString() && (\n            <Component {...props} />\n          )\n        }\n      />\n    );\n  } else if (\n    redirectCheck === REDIRECT_IF_GUEST &&\n    localStorage.getItem(\"isAuthenticated\") === \"false\"\n  ) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/users/login\",\n        }}\n      />\n    );\n  }\n};\n\nexport default RequireAuth;\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Navbar from \"./containers/navbar/navbar\";\nimport AllPosts from \"./containers/posts/AllPosts\";\nimport NewPost from \"./containers/posts/newPost\";\nimport ShowPost from \"./containers/posts/ShowPost/ShowPost\";\nimport EditPost from \"./containers/posts/editPost\";\nimport Register from \"./containers/users/register\";\nimport Login from \"./containers/users/login\";\nimport RequireAuth from \"./components/requireAuth\";\n\nimport \"./index.scss\";\n\nimport {\n  REDIRECT_IF_GUEST,\n  REDIRECT_IF_AUTHENTICATED,\n} from \"./components/requireAuth\";\n\nclass App extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"wrapper\">\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <RequireAuth\n                path=\"/users/register\"\n                component={Register}\n                redirectCheck={REDIRECT_IF_AUTHENTICATED}\n                authProps={this.props}\n              />\n              <RequireAuth\n                path=\"/users/login\"\n                component={Login}\n                redirectCheck={REDIRECT_IF_AUTHENTICATED}\n                authProps={this.props}\n              />\n              <RequireAuth\n                path=\"/posts/create\"\n                component={NewPost}\n                authProps={this.props}\n                redirectCheck={REDIRECT_IF_GUEST}\n              />\n              <RequireAuth\n                path=\"/posts/edit/:id\"\n                component={EditPost}\n                authProps={this.props}\n                redirectCheck={REDIRECT_IF_GUEST}\n              />\n              <Route\n                path=\"/posts/:id\"\n                authProps={this.props}\n                component={ShowPost}\n              ></Route>\n              <Route\n                path=\"/posts\"\n                authProps={this.props}\n                component={AllPosts}\n              ></Route>\n              <Route\n                path=\"/\"\n                authProps={this.props}\n                component={AllPosts}\n              ></Route>\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  };\n}\nexport default connect(mapStateToProps)(App);\n","import _ from \"lodash\";\n\nimport { FETCH_POSTS_SUCCESS, LOAD_MORE_SUCCESS } from \"../actions/postAction\";\n\nconst initialState = {\n  list: [],\n  isFetched: false,\n};\n\nexport default function postsReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POSTS_SUCCESS:\n      if (window.localStorage.isAuthenticated === undefined)\n        localStorage.setItem(\"isAuthenticated\", false);\n      return Object.assign({}, state, {\n        list: _.orderBy(action.payload, \"createdAt\", \"desc\"),\n        isFetched: true,\n      });\n\n    case LOAD_MORE_SUCCESS:\n      const posts = _.drop(_.orderBy(action.payload, \"createdAt\", \"desc\"));\n      return Object.assign({}, state, {\n        list: _.concat(state.list, posts),\n        isFetched: true,\n      });\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_POST_REQUEST,\n  FETCH_POST_SUCCESS,\n  ADD_COMMENT_SUCCESS,\n} from \"../actions/postAction\";\n\nconst initialState = {\n  title: \"\",\n  content: \"\",\n  id: null,\n  uid: null,\n  user: null,\n  createdAt: null,\n  isFetched: false,\n};\n\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POST_REQUEST:\n      return Object.assign({}, { isFetched: false });\n    case FETCH_POST_SUCCESS:\n      return Object.assign({}, state, {\n        ...action.post,\n        id: action.id,\n        user: action.user,\n        comments: action.comments,\n        isFetched: true,\n      });\n    case ADD_COMMENT_SUCCESS:\n      return Object.assign({}, state, {\n        comments: { ...state.comments, [action.id]: action.payload },\n      });\n    default:\n      return state;\n  }\n}\n","import {\n  CREATE_USER_SUCCESS,\n  LOGIN_USER_SUCCESS,\n  LOGOUT_USER_SUCCESS,\n  GET_PROFILE_SUCCESS,\n  UPDATE_PROFILE_SUCCESS,\n} from \"../actions/authAction\";\n\nconst initialState = {\n  isAuthenticated: false,\n  error: null,\n  user: \"guest\",\n  uid: null,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_USER_SUCCESS:\n      return Object.assign({}, state, {\n        isAuthenticated: true,\n        error: null,\n        uid: action.payload.uid,\n      });\n    case UPDATE_PROFILE_SUCCESS:\n      return Object.assign({}, state, {\n        user: action.payload.displayName,\n      });\n    case LOGIN_USER_SUCCESS:\n      localStorage.setItem(\"isAuthenticated\", true);\n      return Object.assign({}, state, {\n        isAuthenticated: true,\n        error: null,\n        user: action.payload.displayName,\n        uid: action.payload.uid,\n      });\n    case LOGOUT_USER_SUCCESS:\n      localStorage.setItem(\"isAuthenticated\", false);\n      return Object.assign({}, initialState);\n    case GET_PROFILE_SUCCESS:\n      return Object.assign({}, state, {\n        user: action.payload.displayName,\n      });\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport PostsReducer from \"./postsReducer\";\nimport PostReducer from \"./postReducer\";\nimport AuthReducer from \"./authReducer\";\n\nconst rootReducer = combineReducers({\n  posts: PostsReducer,\n  post: PostReducer,\n  auth: AuthReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport configureStore from \"./common/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport promise from \"redux-promise\";\nimport reducers from \"../reducers\";\nimport * as Auth from \"../actions/authAction\";\n\nexport default function configureStore() {\n  const store = createStore(reducers, applyMiddleware(promise, thunk));\n  store.dispatch(Auth.verifyAuth());\n  return store;\n}\n"],"sourceRoot":""}